// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  email          String         @unique
  name           String
  imageUrl       String?
  earningEntries EarningEntry[]
  Expenses       Expenses[]
  Income         Income[]
  Subscriptions Subscriptions[]

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Subscriptions {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  user        User             @relation(fields: [userId], references: [id])
  userId      String           @db.ObjectId
  name        String
  description String?
  price       Float
  type        SubscriptionType @default(Monthly)
}

model Expenses {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  description String?
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @db.ObjectId
  date        EarningsEntryDate @relation(fields: [dateId], references: [id])
  dateId      String            @unique @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Income {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  description String?
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @db.ObjectId
  date        EarningsEntryDate @relation(fields: [dateId], references: [id])
  dateId      String            @unique @db.ObjectId
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model EarningEntry {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @db.ObjectId
  date        EarningsEntryDate @relation(fields: [dateId], references: [id])
  dateId      String            @unique @db.ObjectId
  month       Month
  income      Int
  expenses    Int
  workedHours Int?
}

model EarningsEntryDate {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  month        Month
  year         Int
  EarningEntry EarningEntry[]
  Expenses     Expenses[]
  Income       Income[]
}

enum Month {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}

enum SubscriptionType {
  Monthly
  Yearly
}
